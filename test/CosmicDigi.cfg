process PROD  = {
 
 include "RecoTracker/SingleTrackPattern/test/messages.cfg"
 include "RecoTracker/SingleTrackPattern/test/services.cfi"

  source = CosMuoGenSource {
    untracked int32  maxEvents = 2
    untracked int32  RanSeed = 123456
    untracked double MinEn =    10.
    untracked double MaxEn =  5000.
    untracked double MinTheta =  0.
    untracked double MaxTheta = 88.
    untracked double MinPhi =    0.
    untracked double MaxPhi =  360.
    untracked double MinT0  =  -12.5
    untracked double MaxT0  =   12.5
    untracked double ElossScaleFactor = 0.0
    untracked bool Verbosity = false
  }

   # event vertex smearing - applies only once (internal check)
   # Note : all internal generatoes will always do (0,0,0) vertex
   #
   module VtxSmeared = VertexGenerator
   {
      string type = "IOMC/EventVertexGenerators/GaussianEventVertexGenerator"
      double MeanX = 0.
      double MeanY = 0.
      double MeanZ = 0.
      double SigmaX = 0.015
      double SigmaY = 0.015
      double SigmaZ = 53.0  // in mm (as in COBRA/OSCAR)
   }

   #Geometry
   #
   include "Geometry/CMSCommonData/data/cmsSimIdealGeometryXML.cfi"
   es_module = TrackerGeometricDetESModule {}

   #Magnetic Field
   #
   include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"


   # CMS Det.Simulation module (OscarProducer)
   #
   include "RecoTracker/SingleTrackPattern/test/nonbeamOscarProducer.cfi"

  
   # Step 3 : Digitization of the Tracker

   # required for Pixel and SiStrip Digitizers
   #
   es_module = TrackerDigiGeometryESModule {}
   include "SimTracker/SiPixelDigitizer/data/PixelDigi.cfi"
   include "SimTracker/SiStripDigitizer/data/SiStripDigi.cfi"

   #
   es_module = EcalPreshowerGeometryEP {}
   es_module = EcalBarrelGeometryEP {}
   es_module = EcalEndcapGeometryEP {}
   es_module = HcalHardcodeGeometryEP {}
   es_module = CaloTowerHardcodeGeometryEP {}
   es_module = CaloGeometryBuilder {}

   es_module = HcalDbProducer {}
   es_source es_hardcode = HcalHardcodeCalibrations
   {
      untracked vstring toGet =
      {
         "Pedestals", "PedestalWidths",
         "Gains", "GainWidths",
         "QIEShape", "QIEData",
         "ChannelQuality", "ElectronicsMap"
      }
   }

#   module ecaldigi = EcalDigiProducer {}

#   module hcaldigi = HcalDigiProducer
#   {
#      untracked bool doNoise = false
#   }

#TRACKER RECHIT 
module ThreeThresholdClusterizer =  SiStripClusterizer {
		string DigiProducer = "stripdigi"
		string ClusterMode = "ThreeThresholdClusterizer"
		double ChannelThreshold = 2.0
		double SeedThreshold = 3.0
		double ClusterThreshold = 5.0
	 	int32 MaxHolesInCluster   = 1  
                double ElectronPerAdc      = 313.0 
                double EquivalentNoiseCharge300um = 2160.
                double BadStripProbability = 0.002
                bool UseNoiseBadStripFlagFromDB = false
	}
include "RecoLocalTracker/SiPixelClusterizer/data/SiPixelClusterizer.cfi"

 include "RecoLocalTracker/SiStripRecHitConverter/data/StripCPEfromTrackAngle.cfi"
 include "RecoLocalTracker/SiStripRecHitConverter/data/SiStripRecHitConverter.cfi"


include "RecoLocalTracker/SiPixelRecHits/data/SiPixelRecHits.cfi"

   # Step 4 : Output module
   #
   module GEN-SIM-DIGI = PoolOutputModule
   {
      untracked string fileName = "cosmic_digi.root"
   }
   

   # Now order modules for execution
   #
   sequence trDigi = { pixdigi & stripdigi }
   sequence trCluster ={ThreeThresholdClusterizer & pixClust}	
   sequence trHits={LocalMeasurementConverter & pixRecHitConverter}	
   path p1 = { VtxSmeared, SimG4Object,trDigi,trCluster,trHits}
   endpath outpath = { GEN-SIM-DIGI }

}
